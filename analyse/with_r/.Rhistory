cat(paste("-----------------------------------------\n", sep = ""))
}
}
sink()
}
print_temps(df_ww3y)
#summary(lm(data = subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 20) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), formula = S_KM_FN ~ TMP_MEAN_RND1))
#ggplot(subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 8) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), aes(y=S_KM_FN, TMP_MEAN_RND1)) +
#  geom_point() + geom_smooth(method = "lm", formula = y~x) +
#  labs(title = "LR: Laufzeiten(m) ~ Temperatur (gerundet)", x="Temperatur (°C)", y="Zeiten (sek)")
# Eigene Funktion für die Regression zwischen den Ergebnisse und Temperatur
## ----------------------------------------------------------------------------------------------------------------------------------
my_reg_skm_tmp <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max, ort=NULL, geschlecht=NULL) {
if(!is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort & Geschlecht == geschlecht))
}
else if(is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Geschlecht == geschlecht))
}
else if(!is.null(ort) && is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort))
}
if(platz_min == platz_max) {
st_platz <- platz_min
}
else {
st_platz <- paste(platz_min," - ",platz_max)
}
if(tmp_min == tmp_max) {
st_tmp <- tmp_min
}
else {
st_tmp <- paste(tmp_min," - ",tmp_max)
}
sub_title <- paste("Wettbewerb: ",ort,"; Platz: ",st_platz, "; Temp.: ",st_tmp, sep = "")
plot_reg <- ggplot(selection, aes(y=S_KM_FN, TMP_MEAN_RND1)) +
geom_point() + geom_smooth(method = "lm", formula = y~poly(x,reg_poly)) +
labs(title = paste("LM: Ergebnisse (",geschlecht,") ~ Temperatur (x^", reg_poly,")", sep = ""), x="Temperatur (°C)", y="Ergebnisse (in Sek.)", subtitle = sub_title)
plot(plot_reg)
lm_reg_sum <- summary(lm(data = selection, formula = S_KM_FN ~ poly(TMP_MEAN_RND1,reg_poly)))
cat(paste(sub_title, "; Geschlecht: ", geschlecht, sep=""))
print(lm_reg_sum)
cat(paste("-----------------------------------------------------------------------------\n"))
}
## ----------------------------------------------------------------------------------------------------------------------------------
create_reg_plots <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max) {
file_name = paste("reg_p",reg_poly,"_tmp",tmp_min,"_",tmp_max,"_platz",platz_min,"_",platz_max,sep = "")
pdf(file = paste(file_name,".pdf",sep = ""), width = 6, height = 6)
sink(file = paste(file_name,".txt",sep = ""), append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
my_reg_skm_tmp(data_frame,reg_poly,tmp_min,tmp_max,platz_min,platz_max, o,g)
}
}
sink()
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
print_temps <- function(data_frame) {
plaetze = c(1,3,5,10)
sink(file = "temperatur_verteilung.txt", append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
cat(paste("Ort: ", o, "; Geschlecht: ", g, "\n",sep = ""))
cat(paste("-----------------------------------------\n", sep = ""))
for(p in plaetze) {
cat(paste("Platz <= ",p, "\n",sep = ""))
print(sort(unique(subset(data_frame, (Ort==o & Geschlecht==g & Platz <= p), select = "TMP_MEAN_RND1", drop = TRUE))))
}
cat(paste("-----------------------------------------\n", sep = ""))
}
}
sink()
}
print_temps(df_ww3y)
sort(unique(subset(data_frame, (Ort=="Berlib" & Geschlecht=="M" & Platz <= 1), select = "TMP_MEAN_RND1", drop = TRUE)))
sort(unique(subset(df_ww3y, (Ort=="Berlib" & Geschlecht=="M" & Platz <= 1), select = "TMP_MEAN_RND1", drop = TRUE)))
sort(unique(subset(df_ww3y, (Ort=="Berlin" & Geschlecht=="M" & Platz <= 1), select = "TMP_MEAN_RND1", drop = TRUE)))
sort(unique(subset(df_ww3y, (Ort=="Berlin" & Geschlecht=="M" & Platz <= 3), select = "TMP_MEAN_RND1", drop = TRUE)))
View(df_ww3y)
sort(unique(subset(df_ww3y, (Ort=="Berlin" & Geschlecht=="M" & Platz <= 10), select = "TMP_MEAN_RND1", drop = TRUE)))
print(sort(unique(subset(df_ww3y, (Ort=="Berlin" & Geschlecht=="M" & Platz <= 10), select = "TMP_MEAN_RND1", drop = TRUE))))
sort(unique(subset(df_ww3y, (Ort=="Berlin" & Geschlecht=='M' & Platz <= 3), select = "TMP_MEAN_RND1", drop = TRUE)))
View(df_ww3y)
unique(subset(df_ww3y, (Ort=="Berlin" & Geschlecht=='M' & Platz <= 3), select = "TMP_MEAN_RND1", drop = TRUE))
print("hallo")
1+2
1+2
library(psych)
library(MESS)
library(ggplot2)
library(DescTools)
library(corrplot)
#summary(lm(data = subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 20) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), formula = S_KM_FN ~ TMP_MEAN_RND1))
#ggplot(subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 8) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), aes(y=S_KM_FN, TMP_MEAN_RND1)) +
#  geom_point() + geom_smooth(method = "lm", formula = y~x) +
#  labs(title = "LR: Laufzeiten(m) ~ Temperatur (gerundet)", x="Temperatur (°C)", y="Zeiten (sek)")
# Eigene Funktion für die Regression zwischen den Ergebnisse und Temperatur
## ----------------------------------------------------------------------------------------------------------------------------------
my_reg_skm_tmp <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max, ort=NULL, geschlecht=NULL) {
if(!is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort & Geschlecht == geschlecht))
}
else if(is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Geschlecht == geschlecht))
}
else if(!is.null(ort) && is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort))
}
if(platz_min == platz_max) {
st_platz <- platz_min
}
else {
st_platz <- paste(platz_min," - ",platz_max)
}
if(tmp_min == tmp_max) {
st_tmp <- tmp_min
}
else {
st_tmp <- paste(tmp_min," - ",tmp_max)
}
sub_title <- paste("Wettbewerb: ",ort,"; Platz: ",st_platz, "; Temp.: ",st_tmp, sep = "")
plot_reg <- ggplot(selection, aes(y=S_KM_FN, TMP_MEAN_RND1)) +
geom_point() + geom_smooth(method = "lm", formula = y~poly(x,reg_poly)) +
labs(title = paste("LM: Ergebnisse (",geschlecht,") ~ Temperatur (x^", reg_poly,")", sep = ""), x="Temperatur (°C)", y="Ergebnisse (in Sek.)", subtitle = sub_title)
plot(plot_reg)
lm_reg_sum <- summary(lm(data = selection, formula = S_KM_FN ~ poly(TMP_MEAN_RND1,reg_poly)))
cat(paste(sub_title, "; Geschlecht: ", geschlecht, sep=""))
print(lm_reg_sum)
cat(paste("-----------------------------------------------------------------------------\n"))
}
## ----------------------------------------------------------------------------------------------------------------------------------
create_reg_plots <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max) {
file_name = paste("reg_p",reg_poly,"_tmp",tmp_min,"_",tmp_max,"_platz",platz_min,"_",platz_max,sep = "")
pdf(file = paste(file_name,".pdf",sep = ""), width = 6, height = 6)
sink(file = paste(file_name,".txt",sep = ""), append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
my_reg_skm_tmp(data_frame,reg_poly,tmp_min,tmp_max,platz_min,platz_max, o,g)
}
}
sink()
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
print_temps <- function(data_frame) {
plaetze = c(1,3,5,10)
sink(file = "temperatur_verteilung.txt", append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
cat(paste("Ort: ", o, "; Geschlecht: ", g, "\n",sep = ""))
cat(paste("-----------------------------------------\n", sep = ""))
for(p in plaetze) {
cat(paste("Platz <= ",p, "\n",sep = ""))
print(sort(unique(subset(data_frame, (Ort==o & Geschlecht==g & Platz <= p), select = "TMP_MEAN_RND1", drop = TRUE))))
}
cat(paste("-----------------------------------------\n", sep = ""))
}
}
sink()
}
1+2
sort(unique(subset(data_frame, (Ort=="Berlin" & Geschlecht=="M" & Platz <= 3), select = "TMP_MEAN_RND1", drop = TRUE)))
sort(unique(subset(df_ww3y, (Ort=="Berlin" & Geschlecht=="M" & Platz <= 3), select = "TMP_MEAN_RND1", drop = TRUE)))
sort(unique(subset(df_ww3y, (Ort=="Berlin" & Geschlecht=="M" & Platz <= 10), select = "TMP_MEAN_RND1", drop = TRUE)))
sort(unique(subset(df_ww3y, (Ort=="Berlin" & Geschlecht=="M" & Platz <= 1), select = "TMP_MEAN_RND1", drop = TRUE)))
table(subset(df_ww3y, (Ort=="Berlin" & Geschlecht=="M" & Platz <= 1), select = "TMP_MEAN_RND1", drop = TRUE))
#summary(lm(data = subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 20) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), formula = S_KM_FN ~ TMP_MEAN_RND1))
#ggplot(subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 8) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), aes(y=S_KM_FN, TMP_MEAN_RND1)) +
#  geom_point() + geom_smooth(method = "lm", formula = y~x) +
#  labs(title = "LR: Laufzeiten(m) ~ Temperatur (gerundet)", x="Temperatur (°C)", y="Zeiten (sek)")
# Eigene Funktion für die Regression zwischen den Ergebnisse und Temperatur
## ----------------------------------------------------------------------------------------------------------------------------------
my_reg_skm_tmp <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max, ort=NULL, geschlecht=NULL) {
if(!is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort & Geschlecht == geschlecht))
}
else if(is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Geschlecht == geschlecht))
}
else if(!is.null(ort) && is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort))
}
if(platz_min == platz_max) {
st_platz <- platz_min
}
else {
st_platz <- paste(platz_min," - ",platz_max)
}
if(tmp_min == tmp_max) {
st_tmp <- tmp_min
}
else {
st_tmp <- paste(tmp_min," - ",tmp_max)
}
sub_title <- paste("Wettbewerb: ",ort,"; Platz: ",st_platz, "; Temp.: ",st_tmp, sep = "")
plot_reg <- ggplot(selection, aes(y=S_KM_FN, TMP_MEAN_RND1)) +
geom_point() + geom_smooth(method = "lm", formula = y~poly(x,reg_poly)) +
labs(title = paste("LM: Ergebnisse (",geschlecht,") ~ Temperatur (x^", reg_poly,")", sep = ""), x="Temperatur (°C)", y="Ergebnisse (in Sek.)", subtitle = sub_title)
plot(plot_reg)
lm_reg_sum <- summary(lm(data = selection, formula = S_KM_FN ~ poly(TMP_MEAN_RND1,reg_poly)))
cat(paste(sub_title, "; Geschlecht: ", geschlecht, sep=""))
print(lm_reg_sum)
cat(paste("-----------------------------------------------------------------------------\n"))
}
## ----------------------------------------------------------------------------------------------------------------------------------
create_reg_plots <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max) {
file_name = paste("reg_p",reg_poly,"_tmp",tmp_min,"_",tmp_max,"_platz",platz_min,"_",platz_max,sep = "")
pdf(file = paste(file_name,".pdf",sep = ""), width = 6, height = 6)
sink(file = paste(file_name,".txt",sep = ""), append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
my_reg_skm_tmp(data_frame,reg_poly,tmp_min,tmp_max,platz_min,platz_max, o,g)
}
}
sink()
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
print_temps <- function(data_frame) {
plaetze = c(1,3,5,10)
sink(file = "temperatur_verteilung.txt", append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
cat(paste("Ort: ", o, "; Geschlecht: ", g, "\n",sep = ""))
cat(paste("-----------------------------------------\n", sep = ""))
for(p in plaetze) {
cat(paste("Platz <= ",p, "\n",sep = ""))
print(table(subset(data_frame, (Ort==o & Geschlecht==g & Platz <= p), select = "TMP_MEAN_RND1", drop = TRUE)))
}
cat(paste("-----------------------------------------\n", sep = ""))
}
}
sink()
}
print_temps(df_ww3y)
#summary(lm(data = subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 20) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), formula = S_KM_FN ~ TMP_MEAN_RND1))
#ggplot(subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 8) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), aes(y=S_KM_FN, TMP_MEAN_RND1)) +
#  geom_point() + geom_smooth(method = "lm", formula = y~x) +
#  labs(title = "LR: Laufzeiten(m) ~ Temperatur (gerundet)", x="Temperatur (°C)", y="Zeiten (sek)")
# Eigene Funktion für die Regression zwischen den Ergebnisse und Temperatur
## ----------------------------------------------------------------------------------------------------------------------------------
my_reg_skm_tmp <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max, ort=NULL, geschlecht=NULL) {
if(!is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort & Geschlecht == geschlecht))
}
else if(is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Geschlecht == geschlecht))
}
else if(!is.null(ort) && is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort))
}
if(platz_min == platz_max) {
st_platz <- platz_min
}
else {
st_platz <- paste(platz_min," - ",platz_max)
}
if(tmp_min == tmp_max) {
st_tmp <- tmp_min
}
else {
st_tmp <- paste(tmp_min," - ",tmp_max)
}
sub_title <- paste("Wettbewerb: ",ort,"; Platz: ",st_platz, "; Temp.: ",st_tmp, sep = "")
plot_reg <- ggplot(selection, aes(y=S_KM_FN, TMP_MEAN_RND1)) +
geom_point() + geom_smooth(method = "lm", formula = y~poly(x,reg_poly)) +
labs(title = paste("LM: Ergebnisse (",geschlecht,") ~ Temperatur (x^", reg_poly,")", sep = ""), x="Temperatur (°C)", y="Ergebnisse (in Sek.)", subtitle = sub_title)
plot(plot_reg)
lm_reg_sum <- summary(lm(data = selection, formula = S_KM_FN ~ poly(TMP_MEAN_RND1,reg_poly)))
cat(paste(sub_title, "; Geschlecht: ", geschlecht, sep=""))
print(lm_reg_sum)
cat(paste("-----------------------------------------------------------------------------\n"))
}
## ----------------------------------------------------------------------------------------------------------------------------------
create_reg_plots <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max) {
file_name = paste("reg_p",reg_poly,"_tmp",tmp_min,"_",tmp_max,"_platz",platz_min,"_",platz_max,sep = "")
pdf(file = paste(file_name,".pdf",sep = ""), width = 6, height = 6)
sink(file = paste(file_name,".txt",sep = ""), append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
my_reg_skm_tmp(data_frame,reg_poly,tmp_min,tmp_max,platz_min,platz_max, o,g)
}
}
sink()
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
print_temps <- function(data_frame) {
plaetze = c(1,3,5,10)
sink(file = "temperatur_verteilung.txt", append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
cat(paste("Ort: ", o, "; Geschlecht: ", g, "\n",sep = ""))
cat(paste("-----------------------------------------\n", sep = ""))
for(p in plaetze) {
cat(paste("Platz <= ",p,sep = ""))
print(table(subset(data_frame, (Ort==o & Geschlecht==g & Platz <= p), select = "TMP_MEAN_RND1", drop = TRUE)))
}
cat(paste("-----------------------------------------\n", sep = ""))
}
}
sink()
}
print_temps(df_ww3y)
View(df_ww3y_chicago_m_top3)
ggplot(data = df_wetter_3, aes(x=DEW_MEAN_RND)) + geom_histogram(binwidth = 1, color="white", fill="skyblue") + labs(x="Temperatur (°C)", y="Häufigkeit (abs)", title = "Durchschn. Taupunkt (ger.)") + scale_y_continuous(breaks = seq(0,13,1)) + scale_x_continuous(breaks = seq(-15,25,1))
ggplot(data = df_wetter_3, aes(x=TMP_MEAN_RND)) + geom_histogram(binwidth = 1, color="white", fill="skyblue") + labs(x="Temperatur (°C)", y="Häufigkeit (abs)", title = "Durchschn. Temperatur (ger.)") + scale_y_continuous(breaks = seq(0,11,1)) + scale_x_continuous(breaks = seq(0,25,1))
ggplot(data = df_wetter_3, aes(x=TMP_MEAN_RND)) + geom_histogram(binwidth = 1, color="white", fill="skyblue") + labs(x="Temperatur (°C)", y="Häufigkeit (abs)", title = "Durchschn. Temperatur (ger.)") + scale_y_continuous(breaks = seq(0,11,1)) + scale_x_continuous(breaks = seq(-2,25,1))
View(df_wetter_3)
table(df_ww3y)
table(df_ww3y$TMP_MEAN_RND1, df_ww3y$Ort)
table(df_ww3y$TMP_MEAN_RND1, df_ww3y$Ort, df_ww3y$Geschlecht)
#summary(lm(data = subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 20) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), formula = S_KM_FN ~ TMP_MEAN_RND1))
#ggplot(subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 8) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), aes(y=S_KM_FN, TMP_MEAN_RND1)) +
#  geom_point() + geom_smooth(method = "lm", formula = y~x) +
#  labs(title = "LR: Laufzeiten(m) ~ Temperatur (gerundet)", x="Temperatur (°C)", y="Zeiten (sek)")
# Eigene Funktion für die Regression zwischen den Ergebnisse und Temperatur
## ----------------------------------------------------------------------------------------------------------------------------------
my_reg_skm_tmp <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max, ort=NULL, geschlecht=NULL) {
if(!is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort & Geschlecht == geschlecht))
}
else if(is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Geschlecht == geschlecht))
}
else if(!is.null(ort) && is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort))
}
if(platz_min == platz_max) {
st_platz <- platz_min
}
else {
st_platz <- paste(platz_min," - ",platz_max)
}
if(tmp_min == tmp_max) {
st_tmp <- tmp_min
}
else {
st_tmp <- paste(tmp_min," - ",tmp_max)
}
sub_title <- paste("Wettbewerb: ",ort,"; Platz: ",st_platz, "; Temp.: ",st_tmp, sep = "")
plot_reg <- ggplot(selection, aes(y=S_KM_FN, TMP_MEAN_RND1)) +
geom_point() + geom_smooth(method = "lm", formula = y~poly(x,reg_poly)) +
labs(title = paste("LM: Ergebnisse (",geschlecht,") ~ Temperatur (x^", reg_poly,")", sep = ""), x="Temperatur (°C)", y="Ergebnisse (in Sek.)", subtitle = sub_title)
plot(plot_reg)
lm_reg_sum <- summary(lm(data = selection, formula = S_KM_FN ~ poly(TMP_MEAN_RND1,reg_poly)))
cat(paste(sub_title, "; Geschlecht: ", geschlecht, sep=""))
print(lm_reg_sum)
cat(paste("-----------------------------------------------------------------------------\n"))
}
## ----------------------------------------------------------------------------------------------------------------------------------
create_reg_plots <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max) {
file_name = paste("reg_p",reg_poly,"_tmp",tmp_min,"_",tmp_max,"_platz",platz_min,"_",platz_max,sep = "")
pdf(file = paste(file_name,".pdf",sep = ""), width = 6, height = 6)
sink(file = paste(file_name,".txt",sep = ""), append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
my_reg_skm_tmp(data_frame,reg_poly,tmp_min,tmp_max,platz_min,platz_max, o,g)
}
}
sink()
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
print_temps <- function(data_frame) {
plaetze = c(1,3,5,10)
sink(file = "temperatur_verteilung.txt", append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
cat(paste("Ort: ", o, "; Geschlecht: ", g, "\n",sep = ""))
cat(paste("-----------------------------------------\n", sep = ""))
for(p in plaetze) {
cat(paste("Platz <= ",p,sep = ""))
print(table(subset(data_frame, (Ort==o & Geschlecht==g & Platz <= p), select = "TMP_MEAN_RND1", drop = TRUE)))
}
cat(paste("-----------------------------------------\n", sep = ""))
}
}
cat(paste("Gesamt (table): -----------------------------------------\n", sep = ""))
table(data_frame$TMP_MEAN_RND1, data_frame$Ort, data_frame$Geschlecht)
sink()
}
print_temps(df_ww3y)
#summary(lm(data = subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 20) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), formula = S_KM_FN ~ TMP_MEAN_RND1))
#ggplot(subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 8) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), aes(y=S_KM_FN, TMP_MEAN_RND1)) +
#  geom_point() + geom_smooth(method = "lm", formula = y~x) +
#  labs(title = "LR: Laufzeiten(m) ~ Temperatur (gerundet)", x="Temperatur (°C)", y="Zeiten (sek)")
# Eigene Funktion für die Regression zwischen den Ergebnisse und Temperatur
## ----------------------------------------------------------------------------------------------------------------------------------
my_reg_skm_tmp <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max, ort=NULL, geschlecht=NULL) {
if(!is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort & Geschlecht == geschlecht))
}
else if(is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Geschlecht == geschlecht))
}
else if(!is.null(ort) && is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort))
}
if(platz_min == platz_max) {
st_platz <- platz_min
}
else {
st_platz <- paste(platz_min," - ",platz_max)
}
if(tmp_min == tmp_max) {
st_tmp <- tmp_min
}
else {
st_tmp <- paste(tmp_min," - ",tmp_max)
}
sub_title <- paste("Wettbewerb: ",ort,"; Platz: ",st_platz, "; Temp.: ",st_tmp, sep = "")
plot_reg <- ggplot(selection, aes(y=S_KM_FN, TMP_MEAN_RND1)) +
geom_point() + geom_smooth(method = "lm", formula = y~poly(x,reg_poly)) +
labs(title = paste("LM: Ergebnisse (",geschlecht,") ~ Temperatur (x^", reg_poly,")", sep = ""), x="Temperatur (°C)", y="Ergebnisse (in Sek.)", subtitle = sub_title)
plot(plot_reg)
lm_reg_sum <- summary(lm(data = selection, formula = S_KM_FN ~ poly(TMP_MEAN_RND1,reg_poly)))
cat(paste(sub_title, "; Geschlecht: ", geschlecht, sep=""))
print(lm_reg_sum)
cat(paste("-----------------------------------------------------------------------------\n"))
}
## ----------------------------------------------------------------------------------------------------------------------------------
create_reg_plots <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max) {
file_name = paste("reg_p",reg_poly,"_tmp",tmp_min,"_",tmp_max,"_platz",platz_min,"_",platz_max,sep = "")
pdf(file = paste(file_name,".pdf",sep = ""), width = 6, height = 6)
sink(file = paste(file_name,".txt",sep = ""), append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
my_reg_skm_tmp(data_frame,reg_poly,tmp_min,tmp_max,platz_min,platz_max, o,g)
}
}
sink()
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
print_temps <- function(data_frame) {
plaetze = c(1,3,5,10)
sink(file = "temperatur_verteilung.txt", append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
cat(paste("Ort: ", o, "; Geschlecht: ", g, "\n",sep = ""))
cat(paste("-----------------------------------------\n", sep = ""))
for(p in plaetze) {
cat(paste("Platz <= ",p,sep = ""))
print(table(subset(data_frame, (Ort==o & Geschlecht==g & Platz <= p), select = "TMP_MEAN_RND1", drop = TRUE)))
}
cat(paste("-----------------------------------------\n", sep = ""))
}
}
cat(paste("Gesamt (table): -----------------------------------------\n", sep = ""))
print(table(data_frame$TMP_MEAN_RND1, data_frame$Ort, data_frame$Geschlecht))
sink()
}
print_temps(df_ww3y)
## ----------------------------------------------------------------
# Verteilung der Temperatur pro Geschlecht / Ort
ggplot(data = df_ww3y), aes(x=TMP_MEAN_RND1)) +
geom_histogram(color="white", fill="orange") +
labs(x="Temperatur (in C°)", y="Häufigkeit (abs)", title = "Verteilung d. Temperatur") +
scale_x_continuous(breaks = seq(0,25,1)) + scale_y_continuous(breaks = seq(0,25,1))
## ----------------------------------------------------------------
# Verteilung der Temperatur pro Geschlecht / Ort
ggplot(data = df_ww3y, aes(x=TMP_MEAN_RND1)) +
geom_histogram(color="white", fill="orange") +
labs(x="Temperatur (in C°)", y="Häufigkeit (abs)", title = "Verteilung d. Temperatur") +
scale_x_continuous(breaks = seq(0,25,1)) + scale_y_continuous(breaks = seq(0,25,1))
## ----------------------------------------------------------------
# Verteilung der Temperatur pro Geschlecht / Ort
ggplot(data = df_ww3y, aes(x=TMP_MEAN_RND1)) +
geom_histogram(color="white", fill="orange") +
labs(x="Temperatur (in C°)", y="Häufigkeit (abs)", title = "Verteilung d. Temperatur") +
scale_x_continuous(breaks = seq(0,25,1)) + scale_y_continuous(breaks = seq(0,70,1))
## ----------------------------------------------------------------
# Verteilung der Temperatur pro Geschlecht / Ort
ggplot(data = df_ww3y, aes(x=TMP_MEAN_RND1)) +
geom_histogram(color="white", fill="orange") +
labs(x="Temperatur (in C°)", y="Häufigkeit (abs)", title = "Verteilung d. Temperatur") +
scale_x_continuous(breaks = seq(0,25,1)) + scale_y_continuous(breaks = seq(0,100,1))
## ----------------------------------------------------------------
# Verteilung der Temperatur pro Geschlecht / Ort
ggplot(data = df_ww3y, aes(x=TMP_MEAN_RND1)) +
geom_histogram(color="white", fill="orange") +
labs(x="Temperatur (in C°)", y="Häufigkeit (abs)", title = "Verteilung d. Temperatur") +
scale_x_continuous(breaks = seq(0,25,1)) + scale_y_continuous(breaks = seq(0,100,5))
table(df_ww3y$TMP_MEAN, df_ww3y$Ort, df_ww3y$Geschlecht)
ggplot(data = df_wetter_3, aes(x=TMP_MEAN_RND)) + geom_histogram(binwidth = 1, color="white", fill="skyblue") + labs(x="Temperatur (°C)", y="Häufigkeit (abs)", title = "Durchschn. Temperatur (ger.)") + scale_y_continuous(breaks = seq(0,11,1)) + scale_x_continuous(breaks = seq(0,25,1))
table(df_wetter_3$TMP_MEAN)
View(df_wetter_3)
table(df_wetter_3$TMP_MEAN, df_wetter3$Ort)
table(df_wetter_3$TMP_MEAN, df_wetter_3$Ort)
View(df_wetter_4)
View(df_ww3y)
print_temps(df_ww3)
