print(lm_reg_sum)
cat(paste("-----------------------------------------------------------------------------\n"))
}
## ----------------------------------------------------------------------------------------------------------------------------------
create_reg_plots <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max) {
file_name = paste("reg_p",reg_poly,"_tmp",tmp_min,"_",tmp_max,"_platz",platz_min,"_",platz_max,sep = "")
pdf(file = paste(file_name,".pdf",sep = ""), width = 6, height = 6)
sink(file = paste(file_name,".txt",sep = ""), append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
my_reg_skm_tmp(data_frame,reg_poly,tmp_min,tmp_max,platz_min,platz_max, o,g)
}
}
sink()
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
print_temps <- function(data_frame) {
plaetze = c(1,3,5,10)
sink(file = "temperatur_verteilung.txt", append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
cat(paste("Ort: ", o, "; Geschlecht: ", g, "\n",sep = ""))
cat(paste("-----------------------------------------\n", sep = ""))
for(p in plaetze) {
cat(paste("Platz <= ",p,sep = ""))
print(table(subset(data_frame, (Ort==o & Geschlecht==g & Platz <= p), select = "TMP_MEAN_RND1", drop = TRUE)))
}
cat(paste("-----------------------------------------\n", sep = ""))
}
}
cat(paste("Gesamt (table): -----------------------------------------\n", sep = ""))
print(table(data_frame$TMP_MEAN_RND1, data_frame$Ort, data_frame$Geschlecht))
sink()
}
## ----------------------------------------------------------------------------------------------------------------------------------
# Verlauf - alle Jahre pro Wettbewerbsort: Meter pro Sekunden / Streckenabschnitt
plot_paces <- function() {
pdf(file = paste("plt_paces",".pdf",sep = ""), width = 9, height = 6)
for(g in unique(df_ww5rs$Geschlecht)) {
for(o in unique(df_ww5rs$Ort)) {
plot_pace <- ggplot(subset(df_ww5rs, (Geschlecht==g & Ort==o & Platz <=3 & SKM_TYP >= 1 & ZZ_INVALID == FALSE)), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz)) +
geom_point() +
scale_color_continuous(breaks=seq(1,3,1)) +
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
scale_y_log10() +
labs(y="Geschwindikeit (in m/s)", x="Kilometerabschnitt", title = paste("Pace in ",o," (",g,"): TOP-3", sep="")) +
#theme(legend.position = "none") +
facet_wrap(~Jahr)
print(plot_pace)
}
}
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
plot_paces()
#summary(lm(data = subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 20) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), formula = S_KM_FN ~ TMP_MEAN_RND1))
#ggplot(subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 8) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), aes(y=S_KM_FN, TMP_MEAN_RND1)) +
#  geom_point() + geom_smooth(method = "lm", formula = y~x) +
#  labs(title = "LR: Laufzeiten(m) ~ Temperatur (gerundet)", x="Temperatur (°C)", y="Zeiten (sek)")
# Eigene Funktion für die Regression zwischen den Ergebnisse und Temperatur
## ----------------------------------------------------------------------------------------------------------------------------------
my_reg_skm_tmp <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max, ort=NULL, geschlecht=NULL) {
if(!is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort & Geschlecht == geschlecht))
}
else if(is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Geschlecht == geschlecht))
}
else if(!is.null(ort) && is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort))
}
if(platz_min == platz_max) {
st_platz <- platz_min
}
else {
st_platz <- paste(platz_min," - ",platz_max)
}
if(tmp_min == tmp_max) {
st_tmp <- tmp_min
}
else {
st_tmp <- paste(tmp_min," - ",tmp_max)
}
sub_title <- paste("Wettbewerb: ",ort,"; Platz: ",st_platz, "; Temp.: ",st_tmp, sep = "")
plot_reg <- ggplot(selection, aes(y=S_KM_FN, TMP_MEAN_RND1)) +
geom_point() + geom_smooth(method = "lm", formula = y~poly(x,reg_poly)) +
labs(title = paste("LM: Ergebnisse (",geschlecht,") ~ Temperatur (x^", reg_poly,")", sep = ""), x="Temperatur (°C)", y="Ergebnisse (in Sek.)", subtitle = sub_title)
plot(plot_reg)
lm_reg_sum <- summary(lm(data = selection, formula = S_KM_FN ~ poly(TMP_MEAN_RND1,reg_poly)))
cat(paste(sub_title, "; Geschlecht: ", geschlecht, sep=""))
print(lm_reg_sum)
cat(paste("-----------------------------------------------------------------------------\n"))
}
## ----------------------------------------------------------------------------------------------------------------------------------
create_reg_plots <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max) {
file_name = paste("reg_p",reg_poly,"_tmp",tmp_min,"_",tmp_max,"_platz",platz_min,"_",platz_max,sep = "")
pdf(file = paste(file_name,".pdf",sep = ""), width = 6, height = 6)
sink(file = paste(file_name,".txt",sep = ""), append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
my_reg_skm_tmp(data_frame,reg_poly,tmp_min,tmp_max,platz_min,platz_max, o,g)
}
}
sink()
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
print_temps <- function(data_frame) {
plaetze = c(1,3,5,10)
sink(file = "temperatur_verteilung.txt", append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
cat(paste("Ort: ", o, "; Geschlecht: ", g, "\n",sep = ""))
cat(paste("-----------------------------------------\n", sep = ""))
for(p in plaetze) {
cat(paste("Platz <= ",p,sep = ""))
print(table(subset(data_frame, (Ort==o & Geschlecht==g & Platz <= p), select = "TMP_MEAN_RND1", drop = TRUE)))
}
cat(paste("-----------------------------------------\n", sep = ""))
}
}
cat(paste("Gesamt (table): -----------------------------------------\n", sep = ""))
print(table(data_frame$TMP_MEAN_RND1, data_frame$Ort, data_frame$Geschlecht))
sink()
}
## ----------------------------------------------------------------------------------------------------------------------------------
# Verlauf - alle Jahre pro Wettbewerbsort: Meter pro Sekunden / Streckenabschnitt
plot_paces <- function() {
pdf(file = paste("plt_paces",".pdf",sep = ""), width = 10, height = 7)
for(g in unique(df_ww5rs$Geschlecht)) {
for(o in unique(df_ww5rs$Ort)) {
plot_pace <- ggplot(subset(df_ww5rs, (Geschlecht==g & Ort==o & Platz <=3 & SKM_TYP >= 1 & ZZ_INVALID == FALSE)), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz)) +
#geom_point() +
scale_color_continuous(breaks=seq(1,3,1)) +
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
scale_y_log10() +
labs(y="Geschwindikeit (in m/s)", x="Kilometerabschnitt", title = paste("Pace in ",o," (",g,"): TOP-3", sep="")) +
#theme(legend.position = "none") +
facet_wrap(~Jahr)
print(plot_pace)
}
}
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
plot_paces()
#summary(lm(data = subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 20) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), formula = S_KM_FN ~ TMP_MEAN_RND1))
#ggplot(subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 8) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), aes(y=S_KM_FN, TMP_MEAN_RND1)) +
#  geom_point() + geom_smooth(method = "lm", formula = y~x) +
#  labs(title = "LR: Laufzeiten(m) ~ Temperatur (gerundet)", x="Temperatur (°C)", y="Zeiten (sek)")
# Eigene Funktion für die Regression zwischen den Ergebnisse und Temperatur
## ----------------------------------------------------------------------------------------------------------------------------------
my_reg_skm_tmp <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max, ort=NULL, geschlecht=NULL) {
if(!is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort & Geschlecht == geschlecht))
}
else if(is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Geschlecht == geschlecht))
}
else if(!is.null(ort) && is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort))
}
if(platz_min == platz_max) {
st_platz <- platz_min
}
else {
st_platz <- paste(platz_min," - ",platz_max)
}
if(tmp_min == tmp_max) {
st_tmp <- tmp_min
}
else {
st_tmp <- paste(tmp_min," - ",tmp_max)
}
sub_title <- paste("Wettbewerb: ",ort,"; Platz: ",st_platz, "; Temp.: ",st_tmp, sep = "")
plot_reg <- ggplot(selection, aes(y=S_KM_FN, TMP_MEAN_RND1)) +
geom_point() + geom_smooth(method = "lm", formula = y~poly(x,reg_poly)) +
labs(title = paste("LM: Ergebnisse (",geschlecht,") ~ Temperatur (x^", reg_poly,")", sep = ""), x="Temperatur (°C)", y="Ergebnisse (in Sek.)", subtitle = sub_title)
plot(plot_reg)
lm_reg_sum <- summary(lm(data = selection, formula = S_KM_FN ~ poly(TMP_MEAN_RND1,reg_poly)))
cat(paste(sub_title, "; Geschlecht: ", geschlecht, sep=""))
print(lm_reg_sum)
cat(paste("-----------------------------------------------------------------------------\n"))
}
## ----------------------------------------------------------------------------------------------------------------------------------
create_reg_plots <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max) {
file_name = paste("reg_p",reg_poly,"_tmp",tmp_min,"_",tmp_max,"_platz",platz_min,"_",platz_max,sep = "")
pdf(file = paste(file_name,".pdf",sep = ""), width = 6, height = 6)
sink(file = paste(file_name,".txt",sep = ""), append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
my_reg_skm_tmp(data_frame,reg_poly,tmp_min,tmp_max,platz_min,platz_max, o,g)
}
}
sink()
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
print_temps <- function(data_frame) {
plaetze = c(1,3,5,10)
sink(file = "temperatur_verteilung.txt", append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
cat(paste("Ort: ", o, "; Geschlecht: ", g, "\n",sep = ""))
cat(paste("-----------------------------------------\n", sep = ""))
for(p in plaetze) {
cat(paste("Platz <= ",p,sep = ""))
print(table(subset(data_frame, (Ort==o & Geschlecht==g & Platz <= p), select = "TMP_MEAN_RND1", drop = TRUE)))
}
cat(paste("-----------------------------------------\n", sep = ""))
}
}
cat(paste("Gesamt (table): -----------------------------------------\n", sep = ""))
print(table(data_frame$TMP_MEAN_RND1, data_frame$Ort, data_frame$Geschlecht))
sink()
}
## ----------------------------------------------------------------------------------------------------------------------------------
# Verlauf - alle Jahre pro Wettbewerbsort: Meter pro Sekunden / Streckenabschnitt
plot_paces <- function() {
pdf(file = paste("plt_paces",".pdf",sep = ""), width = 9, height = 7)
for(g in unique(df_ww5rs$Geschlecht)) {
for(o in unique(df_ww5rs$Ort)) {
plot_pace <- ggplot(subset(df_ww5rs, (Geschlecht==g & Ort==o & Platz <=3 & SKM_TYP >= 1 & ZZ_INVALID == FALSE)), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz)) +
#geom_point() +
scale_color_continuous(breaks=seq(1,3,1)) +
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
scale_y_log10() +
labs(y="Geschwindikeit (in m/s)", x="Kilometerabschnitt", title = paste("Pace in ",o," (",g,"): TOP-3", sep="")) +
#theme(legend.position = "none") +
facet_wrap(~Jahr)
print(plot_pace)
}
}
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
plot_paces()
ggplot(subset(df_ww5rs, (Geschlecht=="M" & Ort=="Chicagi" & Platz <=3 & SKM_TYP >= 1 & ZZ_INVALID == FALSE)), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz)) +
#geom_point() +
scale_color_continuous(breaks=seq(1,3,1)) +
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
scale_y_log10() +
labs(y="Geschwindikeit (in m/s)", x="Kilometerabschnitt", title = paste("Pace in ","ORT"," (GESCHLECT): TOP-3", sep="")) +
#theme(legend.position = "none") +
facet_wrap(~Jahr)
ggplot(subset(df_ww5rs, (Geschlecht=="M" & Ort=="Chicagi" & Platz <=3 & SKM_TYP >= 1 & ZZ_INVALID == FALSE)), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz)) +
#geom_point() +
scale_color_continuous(breaks=seq(1,3,1)) +
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
scale_y_log10() +
labs(y="Geschwindikeit (in m/s)", x="Kilometerabschnitt", title = paste("Pace in ","ORT"," (GESCHLECT): TOP-3", sep="")) +
#theme(legend.position = "none") +
facet_wrap(~Jahr)
ggplot(subset(df_ww5rs, (Geschlecht=="M" & Ort=="Chicagi" & Platz <=3 & SKM_TYP >= 1 & ZZ_INVALID == FALSE)), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz)) +
#geom_point() +
scale_color_continuous(breaks=seq(1,3,1)) +
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
scale_y_log10() +
labs(y="Geschwindikeit (in m/s)", x="Kilometerabschnitt", title = "Pace in ","ORT"," (GESCHLECT): TOP-3") +
#theme(legend.position = "none") +
facet_wrap(~Jahr)
ggplot(subset(df_ww5rs, (Geschlecht=="M" & Ort=="Chicago" & Platz <=3 & SKM_TYP >= 1 & ZZ_INVALID == FALSE)), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz)) +
#geom_point() +
scale_color_continuous(breaks=seq(1,3,1)) +
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
scale_y_log10() +
labs(y="Geschwindikeit (in m/s)", x="Kilometerabschnitt", title = "Pace in ","ORT"," (GESCHLECT): TOP-3") +
#theme(legend.position = "none") +
facet_wrap(~Jahr)
# Verlauf - einzeln: Meter pro Sekunden / Streckenabschnitt
ggplot(subset(df_ww5rs, (Geschlecht=="M" & Ort=="Chicago" & Platz <=3 & Jahr==2012 & SKM_TYP >= 1 & ZZ_INVALID == FALSE)), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz))+
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
scale_y_log10()
# Verlauf - einzeln: Meter pro Sekunden / Streckenabschnitt
ggplot(subset(df_ww5rs, (Geschlecht=="M" & Ort=="Chicago" & Platz <=3 & Jahr==2012 & SKM_TYP >= 1 & ZZ_INVALID == FALSE)), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz))+
scale_color_continuous(breaks=seq(1,3,1)) +
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
labs(y="Geschwindikeit (in m/s)", x="Kilometerabschnitt", title = "Pace in ","ORT"," (GESCHLECT): TOP-3") +
scale_y_log10()
#summary(lm(data = subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 20) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), formula = S_KM_FN ~ TMP_MEAN_RND1))
#ggplot(subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 8) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), aes(y=S_KM_FN, TMP_MEAN_RND1)) +
#  geom_point() + geom_smooth(method = "lm", formula = y~x) +
#  labs(title = "LR: Laufzeiten(m) ~ Temperatur (gerundet)", x="Temperatur (°C)", y="Zeiten (sek)")
# Eigene Funktion für die Regression zwischen den Ergebnisse und Temperatur
## ----------------------------------------------------------------------------------------------------------------------------------
my_reg_skm_tmp <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max, ort=NULL, geschlecht=NULL) {
if(!is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort & Geschlecht == geschlecht))
}
else if(is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Geschlecht == geschlecht))
}
else if(!is.null(ort) && is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort))
}
if(platz_min == platz_max) {
st_platz <- platz_min
}
else {
st_platz <- paste(platz_min," - ",platz_max)
}
if(tmp_min == tmp_max) {
st_tmp <- tmp_min
}
else {
st_tmp <- paste(tmp_min," - ",tmp_max)
}
sub_title <- paste("Wettbewerb: ",ort,"; Platz: ",st_platz, "; Temp.: ",st_tmp, sep = "")
plot_reg <- ggplot(selection, aes(y=S_KM_FN, TMP_MEAN_RND1)) +
geom_point() + geom_smooth(method = "lm", formula = y~poly(x,reg_poly)) +
labs(title = paste("LM: Ergebnisse (",geschlecht,") ~ Temperatur (x^", reg_poly,")", sep = ""), x="Temperatur (°C)", y="Ergebnisse (in Sek.)", subtitle = sub_title)
plot(plot_reg)
lm_reg_sum <- summary(lm(data = selection, formula = S_KM_FN ~ poly(TMP_MEAN_RND1,reg_poly)))
cat(paste(sub_title, "; Geschlecht: ", geschlecht, sep=""))
print(lm_reg_sum)
cat(paste("-----------------------------------------------------------------------------\n"))
}
## ----------------------------------------------------------------------------------------------------------------------------------
create_reg_plots <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max) {
file_name = paste("reg_p",reg_poly,"_tmp",tmp_min,"_",tmp_max,"_platz",platz_min,"_",platz_max,sep = "")
pdf(file = paste(file_name,".pdf",sep = ""), width = 6, height = 6)
sink(file = paste(file_name,".txt",sep = ""), append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
my_reg_skm_tmp(data_frame,reg_poly,tmp_min,tmp_max,platz_min,platz_max, o,g)
}
}
sink()
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
print_temps <- function(data_frame) {
plaetze = c(1,3,5,10)
sink(file = "temperatur_verteilung.txt", append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
cat(paste("Ort: ", o, "; Geschlecht: ", g, "\n",sep = ""))
cat(paste("-----------------------------------------\n", sep = ""))
for(p in plaetze) {
cat(paste("Platz <= ",p,sep = ""))
print(table(subset(data_frame, (Ort==o & Geschlecht==g & Platz <= p), select = "TMP_MEAN_RND1", drop = TRUE)))
}
cat(paste("-----------------------------------------\n", sep = ""))
}
}
cat(paste("Gesamt (table): -----------------------------------------\n", sep = ""))
print(table(data_frame$TMP_MEAN_RND1, data_frame$Ort, data_frame$Geschlecht))
sink()
}
## ----------------------------------------------------------------------------------------------------------------------------------
# Verlauf - alle Jahre pro Wettbewerbsort: Meter pro Sekunden / Streckenabschnitt
plot_paces <- function() {
pdf(file = paste("plt_paces",".pdf",sep = ""), width = 9, height = 7)
for(g in unique(df_ww5rs$Geschlecht)) {
for(o in unique(df_ww5rs$Ort)) {
if(o != "Chicago") {
plot_pace <- ggplot(subset(df_ww5rs, (Geschlecht==g & Ort==o & Platz <=3 & SKM_TYP >= 1 & ZZ_INVALID == FALSE)), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz)) +
#geom_point() +
scale_color_continuous(breaks=seq(1,3,1)) +
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
scale_y_log10() +
labs(y="Geschwindikeit (in m/s)", x="Kilometerabschnitt", title = paste("Pace in ",o," (",g,"): TOP-3", sep="")) +
#theme(legend.position = "none") +
facet_wrap(~Jahr)
}
else if(o == "Chicago") {
plot_pace <- ggplot(subset(df_ww5rs, (Geschlecht==g & Ort==o & Platz <=3 & SKM_TYP >= 1 & ZZ_INVALID == FALSE & (Jahr>=2007 & Jahr<=2011 & Jahr>=2014))), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz)) +
#geom_point() +
scale_color_continuous(breaks=seq(1,3,1)) +
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
scale_y_log10() +
labs(y="Geschwindikeit (in m/s)", x="Kilometerabschnitt", title = paste("Pace in ",o," (",g,"): TOP-3", sep="")) +
#theme(legend.position = "none") +
facet_wrap(~Jahr)
}
print(plot_pace)
}
}
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
plot_paces()
last_error()
#summary(lm(data = subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 20) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), formula = S_KM_FN ~ TMP_MEAN_RND1))
#ggplot(subset(df_ww3_m_all, ((TMP_MEAN_RND1 >= 0 & TMP_MEAN_RND1 <= 8) & (Platz >= 1 & Platz <= 10) & Ort == "Tokyo")), aes(y=S_KM_FN, TMP_MEAN_RND1)) +
#  geom_point() + geom_smooth(method = "lm", formula = y~x) +
#  labs(title = "LR: Laufzeiten(m) ~ Temperatur (gerundet)", x="Temperatur (°C)", y="Zeiten (sek)")
# Eigene Funktion für die Regression zwischen den Ergebnisse und Temperatur
## ----------------------------------------------------------------------------------------------------------------------------------
my_reg_skm_tmp <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max, ort=NULL, geschlecht=NULL) {
if(!is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort & Geschlecht == geschlecht))
}
else if(is.null(ort) && !is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Geschlecht == geschlecht))
}
else if(!is.null(ort) && is.null(geschlecht)) {
selection <- subset(data_frame, ((TMP_MEAN_RND1 >= tmp_min & TMP_MEAN_RND1 <= tmp_max) &
(Platz >= platz_min & Platz <= platz_max) & Ort == ort))
}
if(platz_min == platz_max) {
st_platz <- platz_min
}
else {
st_platz <- paste(platz_min," - ",platz_max)
}
if(tmp_min == tmp_max) {
st_tmp <- tmp_min
}
else {
st_tmp <- paste(tmp_min," - ",tmp_max)
}
sub_title <- paste("Wettbewerb: ",ort,"; Platz: ",st_platz, "; Temp.: ",st_tmp, sep = "")
plot_reg <- ggplot(selection, aes(y=S_KM_FN, TMP_MEAN_RND1)) +
geom_point() + geom_smooth(method = "lm", formula = y~poly(x,reg_poly)) +
labs(title = paste("LM: Ergebnisse (",geschlecht,") ~ Temperatur (x^", reg_poly,")", sep = ""), x="Temperatur (°C)", y="Ergebnisse (in Sek.)", subtitle = sub_title)
plot(plot_reg)
lm_reg_sum <- summary(lm(data = selection, formula = S_KM_FN ~ poly(TMP_MEAN_RND1,reg_poly)))
cat(paste(sub_title, "; Geschlecht: ", geschlecht, sep=""))
print(lm_reg_sum)
cat(paste("-----------------------------------------------------------------------------\n"))
}
## ----------------------------------------------------------------------------------------------------------------------------------
create_reg_plots <- function(data_frame,reg_poly=1,tmp_min, tmp_max, platz_min, platz_max) {
file_name = paste("reg_p",reg_poly,"_tmp",tmp_min,"_",tmp_max,"_platz",platz_min,"_",platz_max,sep = "")
pdf(file = paste(file_name,".pdf",sep = ""), width = 6, height = 6)
sink(file = paste(file_name,".txt",sep = ""), append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
my_reg_skm_tmp(data_frame,reg_poly,tmp_min,tmp_max,platz_min,platz_max, o,g)
}
}
sink()
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
print_temps <- function(data_frame) {
plaetze = c(1,3,5,10)
sink(file = "temperatur_verteilung.txt", append = TRUE)
for(g in unique(data_frame$Geschlecht)) {
for(o in unique(data_frame$Ort)) {
cat(paste("Ort: ", o, "; Geschlecht: ", g, "\n",sep = ""))
cat(paste("-----------------------------------------\n", sep = ""))
for(p in plaetze) {
cat(paste("Platz <= ",p,sep = ""))
print(table(subset(data_frame, (Ort==o & Geschlecht==g & Platz <= p), select = "TMP_MEAN_RND1", drop = TRUE)))
}
cat(paste("-----------------------------------------\n", sep = ""))
}
}
cat(paste("Gesamt (table): -----------------------------------------\n", sep = ""))
print(table(data_frame$TMP_MEAN_RND1, data_frame$Ort, data_frame$Geschlecht))
sink()
}
## ----------------------------------------------------------------------------------------------------------------------------------
# Verlauf - alle Jahre pro Wettbewerbsort: Meter pro Sekunden / Streckenabschnitt
plot_paces <- function() {
pdf(file = paste("plt_paces",".pdf",sep = ""), width = 9, height = 7)
for(g in unique(df_ww5rs$Geschlecht)) {
for(o in unique(df_ww5rs$Ort)) {
if(o != "Chicago") {
plot_pace <- ggplot(subset(df_ww5rs, (Geschlecht==g & Ort==o & Platz <=3 & SKM_TYP >= 1 & ZZ_INVALID == FALSE)), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz)) +
#geom_point() +
scale_color_continuous(breaks=seq(1,3,1)) +
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
scale_y_log10() +
labs(y="Geschwindikeit (in m/s)", x="Kilometerabschnitt", title = paste("Pace in ",o," (",g,"): TOP-3", sep="")) +
#theme(legend.position = "none") +
facet_wrap(~Jahr)
}
else if(o == "Chicago") {
plot_pace <- ggplot(subset(df_ww5rs, (Geschlecht==g & Ort==o & Platz <=3 & SKM_TYP >= 1 & ZZ_INVALID == FALSE & Jahr!=2012 & Jahr!=2013)), aes(x=SKM_TYP, y=SKM_PACE, group=Platz)) +
geom_line(stat = "identity", position = "dodge", aes(color=Platz)) +
#geom_point() +
scale_color_continuous(breaks=seq(1,3,1)) +
scale_x_continuous(breaks = seq(1,10,1), labels = c("5","10","15","20","21","25","30","35","40","42")) +
scale_y_log10() +
labs(y="Geschwindikeit (in m/s)", x="Kilometerabschnitt", title = paste("Pace in ",o," (",g,"): TOP-3", sep="")) +
#theme(legend.position = "none") +
facet_wrap(~Jahr)
}
print(plot_pace)
}
}
dev.off()
}
## ----------------------------------------------------------------------------------------------------------------------------------
plot_paces()
