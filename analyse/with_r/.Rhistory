)
# t-Test
t.test(x=subset(df_wma_wetter_2, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_wetter_2, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = TRUE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_wetter_2, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_wetter_2, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
df_wma_ort_skm <- subset(df_wma_2, select = c(S_KM_FN, Ort))
View(df_wma_ort_skm)
save.image()
install.packages("psych")
library(pysch)
library(psych)
describeBy(df_wma_ort_skm$S_KM_FN, df_wma_ort_skm$Ort)
anova_skmfn_ort_training <- aov(df_wma_ort_skm$S_KM_FN, df_wma_ort_skm$Ort)
anova_skmfn_ort_training <- aov(df_wma_ort_skm$S_KM_FN ~ df_wma_ort_skm$Ort)
summary(anova_skmfn_ort_training)
pairwise.t.test(df_wma_ort_skm$S_KM_FN, df_wma_ort_skm$Ort)
pairwise.t.test(df_wma_ort_skm$S_KM_FN, df_wma_ort_skm$Ort, p.adjust.method = "bonferroni")
qqnorm(rstandard(anova_skmfn_ort_training))
qqline(rstandard(anova_skmfn_ort_training))
df_wma_ort_skm_m <- subset(df_wma_2, (Geschlecht=='M'), select = c(S_KM_FN, Ort))
describeBy(df_wma_ort_skm$S_KM_FN, df_wma_ort_skm$Ort)
describeBy(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort)
anova_skmfn_ort_m_training <- aov(df_wma_ort_skm_m$S_KM_FN ~ df_wma_ort_skm_m$Ort)
summary(anova_skmfn_ort_m_training)
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort, p.adjust.method = "bonferroni")
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort)
library(pysch)
library(psych)
library(ggplot2)
# t-Test
t.test(x=subset(df_wma_wetter_2, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_wetter_2, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# var-test
var.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
conf.level = 0.95
)
# var-test
var.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
conf.level = 0.95
)
# var-test
var.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
conf.level = 0.95
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# var-test
var.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
conf.level = 0.95, alternative = "two-sided"
)
# var-test
var.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
conf.level = 0.95, alternative = "two.sided"
)
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN))),
conf.level = 0.95
)
df_wma_ort_skm_m
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN))),
conf.level = 0.95
)
library("cars")
library("car")
describeBy(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort)
levene.test(y=df_wma_ort_skm_m, group=Ort)
leveneTest(y=df_wma_ort_skm_m, group=Ort)
leveneTest(S_KM_FN ~ Ort, df_wma_ort_skm_m)
summary(anova_skmfn_ort_m_training)
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort, p.adjust.method = "bonferroni")
qqnorm(rstandard(anova_skmfn_ort_training))
qqline(rstandard(anova_skmfn_ort_training))
qqnorm(rstandard(anova_skmfn_ort_m_training))
qqline(rstandard(anova_skmfn_ort_m_training))
describeBy(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort)
leveneTest(S_KM_FN ~ Ort, df_wma_ort_skm_m)
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN))),
conf.level = 0.95
)
leveneTest(S_KM_FN ~ Ort, df_wma_ort_skm_m)
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN))),
conf.level = 0.95
)
leveneTest(S_KM_FN ~ Ort, df_wma_ort_skm_m)
library("DescTools")
EtaSq(anova_skmfn_ort_m_training)
sqrt(0.13/(1-0.13))
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN))),
conf.level = 0.95
)
leveneTest(S_KM_FN ~ Ort, df_wma_ort_skm_m)
oneway.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort, p.adjust.method = "bonferroni")
oneway.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort)
oneway.test(S_KM_FN ~ Ort,  data = df_wma_ort_skm_m, var.equal = FALSE)
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort, p.adjust.method = "bonferroni", paired = FALSE)
leveneTest(S_KM_FN ~ Ort, df_wma_ort_skm_m)
oneway.test(S_KM_FN ~ Ort,  data = df_wma_ort_skm_m, var.equal = FALSE)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Chicago'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Chicago'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.975, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Chicago'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.85, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Chicago'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
oneway.test(S_KM_FN ~ Ort,  data = df_wma_ort_skm_m, var.equal = FALSE)
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort, p.adjust.method = "bonferroni", paired = FALSE)
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort, p.adjust.method = "bonferroni", paired = FALSE, pool.sd = FALSE)
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN))),
conf.level = 0.95
)
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN))),
conf.level = 0.95
)
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='London'), select = c(S_KM_FN))),
conf.level = 0.95
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
library("cr")
library("cars")
library("car")
library(psych)
library(ggplot2)
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=S_KM_FN, x=Ort)) +
geom_boxplot()
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=S_KM_FN, x=Ort, color=Ort)) +
geom_boxplot() +
labs(y="Laufzeit", x="Ort", title = "Laufzeit (Männer) / Ort")
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=S_KM_FN, x=Ort, fill=Ort)) +
geom_boxplot() +
labs(y="Laufzeit", x="Ort", title = "Laufzeit (Männer) / Ort")
ggsave(filename = "plt_box_lfz_m_ort", plot = last_plot(),units = "px",scale = 1, limitsize = FALSE, device = "png")
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni",
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater"
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater",
paired = FALSE, pool.sd = FALSE)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
t.test(data=subset(df_wma_ort_skm_m, (Ort %in% c('Berlin','NewYork'))),
S_KM_FN ~ Ort,
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
t.test(data=subset(df_wma_ort_skm_m, (Ort %in% c('Berlin','NewYork'))),
S_KM_FN ~ Ort,
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater",
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "less",
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater",
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "less",
paired = FALSE, pool.sd = FALSE)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater",
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater",
paired = FALSE, pool.sd = FALSE)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater",
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "less",
paired = FALSE, pool.sd = FALSE)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "lesse"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# t-Test - Berlin ~ London
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Londn'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# t-Test - Berlin ~ London
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='London'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
t.test(x=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Chicago'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# pairwise-test: two.sided
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "two.sided",
paired = FALSE, pool.sd = FALSE)
install.packages("MESS")
library(psych)
library(MESS)
library(ggplo2)
library(DescTools)
library(ggplot2)
# Stichprobe ermitteln
power_t_test(delta = 0.5, sig.level = 0.05, power = 0.95, ratio = 1, type = "two.sampe"
, alternative = "one.sided", df.method = "welch")
# Stichprobe ermitteln
power_t_test(delta = 0.5, sig.level = 0.05, power = 0.95, ratio = 1, type = "two.sample"
, alternative = "one.sided", df.method = "welch")
View(df_wma_1)
View(df_wma_2)
View(df_wma_ort_skm)
View(df_wma_ort_skm_m)
View(df_wma_wetter)
View(df_wma_wetter_2)
View(df_wetter_3)
View(df_wma_wetter_2)
View(df_wetter_3)
df_wetter_4 <- df_wetter_3
round(df_wetter_4$TMP_MEAN, digits = 1)
View(df_wetter_4)
df_wetter_4$TMP_MEAN_RND1 <- round(df_wetter_4$TMP_MEAN, digits = 1)
df_wetter_4$DEW_MEAN_RND1 <- round(df_wetter_4$DEW_MEAN, digits = 1)
df_wetter_4$WND_SR_MEAN_RND1 <- round(df_wetter_4$WND_SR_MEAN, digits = 1)
View(df_wma_1)
View(df_wma_2)
df_wma_wetter_3 <- merge(df_wma_2, df_wetter_4, by = c("Jahr","Ort","Datum"))
View(df_wma_wetter_3)
View(df_wma_2)
df_ww3 <- df_wma_wetter_3
unique(df_ww3$Ort)
df_ww3_london_m <- subset(df_ww3, (Ort=='London' && Geschlecht=='M'))
View(df_ww3_london_m)
View(df_ww3)
df_ww3_london_m <- subset(df_ww3, (Ort=='London' & Geschlecht=='M'))
View(df_ww3_london_m)
rm(df_ww3_london_m)
df_ww3_london_m_all <- subset(df_ww3, (Ort=='London' & Geschlecht=='M'))
View(df_ww3_london_m_all)
df_ww3_london_m_top5 <- subset(df_ww3, (Ort=='London' & Geschlecht=='M' & Platz <= 5))
View(df_ww3_london_m_top5)
df_ww3_london_m_top3 <- subset(df_ww3, (Ort=='London' & Geschlecht=='M' & Platz <= 3))
df_ww3_london_w_all <- subset(df_ww3, (Ort=='London' & Geschlecht=='W'))
df_ww3_london_w_top5 <- subset(df_ww3, (Ort=='London' & Geschlecht=='W' & Platz <= 5))
df_ww3_london_w_top3 <- subset(df_ww3, (Ort=='London' & Geschlecht=='W' & Platz <= 3))
View(df_ww3_london_w_top5)
df_ww3_berlin_m_all <- subset(df_ww3, (Ort=='Berlin' & Geschlecht=='M'))
df_ww3_berlin_m_top5 <- subset(df_ww3, (Ort=='Berlin' & Geschlecht=='M' & Platz <= 5))
df_ww3_berlin_m_top3 <- subset(df_ww3, (Ort=='Berlin' & Geschlecht=='M' & Platz <= 3))
df_ww3_berlin_w_all <- subset(df_ww3, (Ort=='Berlin' & Geschlecht=='W'))
df_ww3_berlin_w_top5 <- subset(df_ww3, (Ort=='Berlin' & Geschlecht=='W' & Platz <= 5))
df_ww3_berlin_w_top3 <- subset(df_ww3, (Ort=='Berlin' & Geschlecht=='W' & Platz <= 3))
View(df_ww3_berlin_m_top3)
df_ww3_chicago_m_all <- subset(df_ww3, (Ort=='Chicago' & Geschlecht=='M'))
df_ww3_chicago_m_top5 <- subset(df_ww3, (Ort=='Chicago' & Geschlecht=='M' & Platz <= 5))
df_ww3_chicago_m_top3 <- subset(df_ww3, (Ort=='Chicago' & Geschlecht=='M' & Platz <= 3))
df_ww3_chicago_w_all <- subset(df_ww3, (Ort=='Chicago' & Geschlecht=='W'))
df_ww3_chicago_w_top5 <- subset(df_ww3, (Ort=='Chicago' & Geschlecht=='W' & Platz <= 5))
df_ww3_chicago_w_top3 <- subset(df_ww3, (Ort=='Chicago' & Geschlecht=='W' & Platz <= 3))
df_ww3_newyork_m_all <- subset(df_ww3, (Ort=='NewYork' & Geschlecht=='M'))
df_ww3_newyork_m_top5 <- subset(df_ww3, (Ort=='NewYork' & Geschlecht=='M' & Platz <= 5))
df_ww3_newyork_m_top3 <- subset(df_ww3, (Ort=='NewYork' & Geschlecht=='M' & Platz <= 3))
df_ww3_newyork_w_all <- subset(df_ww3, (Ort=='NewYork' & Geschlecht=='W'))
df_ww3_newyork_w_top5 <- subset(df_ww3, (Ort=='NewYork' & Geschlecht=='W' & Platz <= 5))
df_ww3_newyork_w_top3 <- subset(df_ww3, (Ort=='NewYork' & Geschlecht=='W' & Platz <= 3))
df_ww3_tokyo_m_all <- subset(df_ww3, (Ort=='Tokyo' & Geschlecht=='M'))
df_ww3_tokyo_m_top5 <- subset(df_ww3, (Ort=='Tokyo' & Geschlecht=='M' & Platz <= 5))
df_ww3_tokyo_m_top3 <- subset(df_ww3, (Ort=='Tokyo' & Geschlecht=='M' & Platz <= 3))
df_ww3_tokyo_w_all <- subset(df_ww3, (Ort=='Tokyo' & Geschlecht=='W'))
df_ww3_tokyo_w_top5 <- subset(df_ww3, (Ort=='Tokyo' & Geschlecht=='W' & Platz <= 5))
df_ww3_tokyo_w_top3 <- subset(df_ww3, (Ort=='Tokyo' & Geschlecht=='W' & Platz <= 3))
df_ww3_m_all <- subset(df_ww3, (Geschlecht=='M'))
df_ww3_m_top5 <- subset(df_ww3, (Geschlecht=='M' & Platz <= 5))
df_ww3_m_top3 <- subset(df_ww3, (Geschlecht=='M' & Platz <= 3))
df_ww3_w_all <- subset(df_ww3, (Geschlecht=='W'))
df_ww3_w_top5 <- subset(df_ww3, (Geschlecht=='W' & Platz <= 5))
df_ww3_w_top3 <- subset(df_ww3, (Geschlecht=='W' & Platz <= 3))
save.image()
View(df_ww3_london_m_top3)
View(df_ww3_chicago_m_top3)
View(df_ww3_newyork_m_top3)
library(psych)
library(MESS)
library(ggplot2)
library(DescTools)
describe(df_ww3_berlin_m_top5)
describe(df_ww3_berlin_m_top5$S_KM_FN)
describe(df_ww3_berlin_m_top3$S_KM_FN)
df_ww3y <- subset(df_ww3, (Jahr==2010 | Jahr==2011 | Jahr > 2012))
View(df_ww3y)
describe(df_ww3y)
summary(df_ww3y)
unique(df_ww3y$Jahr)
count(df_ww3y$Ort == "NewYork")
table(df_ww3y$Ort)
df_ww3y_m_all <- subset(df_ww3y, (Geschlecht=='M'))
df_ww3y_m_top5 <- subset(df_ww3y, (Geschlecht=='M' & Platz <= 5))
df_ww3y_m_top3 <- subset(df_ww3y, (Geschlecht=='M' & Platz <= 3))
df_ww3y_w_all <- subset(df_ww3y, (Geschlecht=='W'))
df_ww3y_w_top5 <- subset(df_ww3y, (Geschlecht=='W' & Platz <= 5))
df_ww3y_w_top3 <- subset(df_ww3y, (Geschlecht=='W' & Platz <= 3))
df_ww3y_london_m_all <- subset(df_ww3y, (Ort=='London' & Geschlecht=='M'))
df_ww3y_london_m_top5 <- subset(df_ww3y, (Ort=='London' & Geschlecht=='M' & Platz <= 5))
df_ww3y_london_m_top3 <- subset(df_ww3y, (Ort=='London' & Geschlecht=='M' & Platz <= 3))
df_ww3y_london_w_all <- subset(df_ww3y, (Ort=='London' & Geschlecht=='W'))
df_ww3y_london_w_top5 <- subset(df_ww3y, (Ort=='London' & Geschlecht=='W' & Platz <= 5))
df_ww3y_london_w_top3 <- subset(df_ww3y, (Ort=='London' & Geschlecht=='W' & Platz <= 3))
df_ww3y_berlin_m_all <- subset(df_ww3y, (Ort=='Berlin' & Geschlecht=='M'))
df_ww3y_berlin_m_top5 <- subset(df_ww3y, (Ort=='Berlin' & Geschlecht=='M' & Platz <= 5))
df_ww3y_berlin_m_top3 <- subset(df_ww3y, (Ort=='Berlin' & Geschlecht=='M' & Platz <= 3))
df_ww3y_berlin_w_all <- subset(df_ww3y, (Ort=='Berlin' & Geschlecht=='W'))
df_ww3y_berlin_w_top5 <- subset(df_ww3y, (Ort=='Berlin' & Geschlecht=='W' & Platz <= 5))
df_ww3y_berlin_w_top3 <- subset(df_ww3y, (Ort=='Berlin' & Geschlecht=='W' & Platz <= 3))
df_ww3y_chicago_m_all <- subset(df_ww3y, (Ort=='Chicago' & Geschlecht=='M'))
df_ww3y_chicago_m_top5 <- subset(df_ww3y, (Ort=='Chicago' & Geschlecht=='M' & Platz <= 5))
df_ww3y_chicago_m_top3 <- subset(df_ww3y, (Ort=='Chicago' & Geschlecht=='M' & Platz <= 3))
df_ww3y_chicago_w_all <- subset(df_ww3y, (Ort=='Chicago' & Geschlecht=='W'))
df_ww3y_chicago_w_top5 <- subset(df_ww3y, (Ort=='Chicago' & Geschlecht=='W' & Platz <= 5))
df_ww3y_chicago_w_top3 <- subset(df_ww3y, (Ort=='Chicago' & Geschlecht=='W' & Platz <= 3))
df_ww3y_newyork_m_all <- subset(df_ww3y, (Ort=='NewYork' & Geschlecht=='M'))
df_ww3y_newyork_m_top5 <- subset(df_ww3y, (Ort=='NewYork' & Geschlecht=='M' & Platz <= 5))
df_ww3y_newyork_m_top3 <- subset(df_ww3y, (Ort=='NewYork' & Geschlecht=='M' & Platz <= 3))
df_ww3y_newyork_w_all <- subset(df_ww3y, (Ort=='NewYork' & Geschlecht=='W'))
df_ww3y_newyork_w_top5 <- subset(df_ww3y, (Ort=='NewYork' & Geschlecht=='W' & Platz <= 5))
df_ww3y_newyork_w_top3 <- subset(df_ww3y, (Ort=='NewYork' & Geschlecht=='W' & Platz <= 3))
df_ww3y_tokyo_m_all <- subset(df_ww3y, (Ort=='Tokyo' & Geschlecht=='M'))
df_ww3y_tokyo_m_top5 <- subset(df_ww3y, (Ort=='Tokyo' & Geschlecht=='M' & Platz <= 5))
df_ww3y_tokyo_m_top3 <- subset(df_ww3y, (Ort=='Tokyo' & Geschlecht=='M' & Platz <= 3))
df_ww3y_tokyo_w_all <- subset(df_ww3y, (Ort=='Tokyo' & Geschlecht=='W'))
df_ww3y_tokyo_w_top5 <- subset(df_ww3y, (Ort=='Tokyo' & Geschlecht=='W' & Platz <= 5))
df_ww3y_tokyo_w_top3 <- subset(df_ww3y, (Ort=='Tokyo' & Geschlecht=='W' & Platz <= 3))
describe(df_ww3_berlin_m_top5$S_KM_FN)
describe(df_ww3y_berlin_m_top5$S_KM_FN)
View(df_wma_ort_skm_m)
describe(df_ww3y_berlin_m_top5$S_KM_FN, df_ww3y_berlin_m_top5$Ort)
describeBy(df_ww3y_berlin_m_top5$S_KM_FN, df_ww3y_berlin_m_top5$Ort)
describeBy(df_ww3y_m_top5$S_KM_FN, df_ww3y_m_top5$Ort)
describeBy(df_ww3y_m_top3$S_KM_FN, df_ww3y_m_top3$Ort)
View(df_wetter_1)
View(df_wma_1)
str(df_wma_csv)
str(df_wma_1)
str(df_wetter_csv)
str(df_wetter_1)
df_test <- df_wetter_csv
str(df-test)
str(df_test)
df_test$Datum <- as.Date(df_test$Datum, "%Y-%m-%d")
View(df_test)
str(df_test)
str(df_wetter_1)
str(df_wma_csv)
df_test2 <- df_wma_csv
df_test2$Datum <- as.Date(df_test2$Datum, "%Y-%m-%d")
str(df_test2)
str(df_wma_2)
unique(df_test2$Datum)
unique(df_wma_2$Datum)
df_test3 <- df_wma_csv
df_test3$Datum <- as.POSIXlt(df_test3$Datum, "%Y-%m-%d")
str(df_test3)
unique(df_wma_2$Datum)
unique(df_test3$Datum)
df_test3$Datum <- as.POSIXlt(df_test3$Datum, "%Y-%m-%d", tz="GMT")
unique(df_test3$Datum)
df_test3 <- df_wma_csv
df_test3$Datum <- as.POSIXlt(df_test3$Datum, "%Y-%m-%d", tz="GMT")
unique(df_test3$Datum)
df_test3 <- df_wma_csv
df_test3$Datum <- as.POSIXlt(df_test3$Datum, "%Y-%m-%d", tz="UTC")
unique(df_test3$Datum)
View(df_wetter_csv)
View(df_wma_csv)
rm(df_test)
rm(df_test2)
rm(df_test3)
str(df_wetter_csv)
View(df_wetter_1)
View(df_wetter_2)
View(df_wetter_3)
