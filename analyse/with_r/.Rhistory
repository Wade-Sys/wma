scale_x_continuous(breaks = seq(0,12,1))
ggsave(filename = "plt_skmfn_wndsr_m_ort", plot = last_plot(),units = "px",scale = 1, limitsize = FALSE, device = "png")
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) + geom_point(alpha=0.5, size=2) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(alpha=0.5, aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(alpha=0.3, aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1))
geom_point(aes(size=S_KM_FN, alpha=0.5) +
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN, alpha=0.5)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1))
ggsave(filename = "plt_tmp_wndsr_m_ort", plot = last_plot(),units = "px",scale = 1, limitsize = FALSE, device = "png")
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1))
ggsave(filename = "plt_tmp_wndsr_m_ort", plot = last_plot(),units = "px",scale = 1, limitsize = FALSE, device = "png")
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = seq(7000, 9000,200))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = seq(7000, 9000))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = c(7000, 9000))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = c(1,2))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = c(1,10))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = c(1,3))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = c(1,5))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = c(1,10))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = c(1,20))
scale_size_continuous(range = c(0.5,10)
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = c(0.5,10))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = c(1,7))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = c(1,8))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=TMP_MEAN_RND, x=WND_SR_MEAN_RND, color=Ort)) +
geom_point(aes(size=S_KM_FN)) +
labs(y="Temperatur (°C)", x="Windstärke (m/s)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(0,26,1)) +
scale_x_continuous(breaks = seq(0,12,1)) +
scale_size_continuous(range = c(1,8))
ggsave(filename = "plt_tmp_wndsr_m_ort", plot = last_plot(),units = "px",scale = 1, limitsize = FALSE, device = "png")
library(ggplot2)
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=S_KM_FN, x=TMP_MEAN_RND, color=Ort)) +
geom_point(aes(size=WND_SR_MEAN_RND)) +
labs(y="Laufzeit", x="Temperatur (°C)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(7000,9000,100)) +
scale_x_continuous(breaks = seq(0,26,1)) +
scale_size_continuous(range = c(1,8))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=S_KM_FN, x=TMP_MEAN_RND, color=Ort)) +
geom_point(aes(size=WND_SR_MEAN_RND)) +
labs(y="Laufzeit", x="Temperatur (°C)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(7000,9000,100)) +
scale_x_continuous(breaks = seq(0,26,1)) +
scale_size_continuous(range = c(1,5))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=S_KM_FN, x=TMP_MEAN_RND, color=Ort, alpha=0.5)) +
geom_point(aes(size=WND_SR_MEAN_RND)) +
labs(y="Laufzeit", x="Temperatur (°C)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(7000,9000,100)) +
scale_x_continuous(breaks = seq(0,26,1)) +
scale_size_continuous(range = c(1,5))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=S_KM_FN, x=TMP_MEAN_RND, color=Ort, alpha=0.2)) +
geom_point(aes(size=WND_SR_MEAN_RND)) +
labs(y="Laufzeit", x="Temperatur (°C)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(7000,9000,100)) +
scale_x_continuous(breaks = seq(0,26,1)) +
scale_size_continuous(range = c(1,5))
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=S_KM_FN, x=TMP_MEAN_RND, color=Ort, alpha=0.2)) +
geom_point(aes(size=WND_SR_MEAN_RND)) +
labs(y="Laufzeit", x="Temperatur (°C)", title = "Temperatur (°C) / Windstärke / Laufzeit (Männer)") +
scale_y_continuous(breaks = seq(7000,9000,100)) +
scale_x_continuous(breaks = seq(0,26,1)) +
scale_size_continuous(range = c(1,3))
ggsave(filename = "plt_lfz_tmp_wndsr_m_ort", plot = last_plot(),units = "px",scale = 1, limitsize = FALSE, device = "png")
subset(df_wetter_1, Ort=="Chicago")
# t-Test
t.test(x=subset(df_wma_wetter_2, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_wetter_2, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_wetter_2, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_wetter_2, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# t-Test
t.test(x=subset(df_wma_wetter_2, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_wetter_2, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_wetter_2, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_wetter_2, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = TRUE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_wetter_2, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_wetter_2, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
df_wma_ort_skm <- subset(df_wma_2, select = c(S_KM_FN, Ort))
View(df_wma_ort_skm)
save.image()
install.packages("psych")
library(pysch)
library(psych)
describeBy(df_wma_ort_skm$S_KM_FN, df_wma_ort_skm$Ort)
anova_skmfn_ort_training <- aov(df_wma_ort_skm$S_KM_FN, df_wma_ort_skm$Ort)
anova_skmfn_ort_training <- aov(df_wma_ort_skm$S_KM_FN ~ df_wma_ort_skm$Ort)
summary(anova_skmfn_ort_training)
pairwise.t.test(df_wma_ort_skm$S_KM_FN, df_wma_ort_skm$Ort)
pairwise.t.test(df_wma_ort_skm$S_KM_FN, df_wma_ort_skm$Ort, p.adjust.method = "bonferroni")
qqnorm(rstandard(anova_skmfn_ort_training))
qqline(rstandard(anova_skmfn_ort_training))
df_wma_ort_skm_m <- subset(df_wma_2, (Geschlecht=='M'), select = c(S_KM_FN, Ort))
describeBy(df_wma_ort_skm$S_KM_FN, df_wma_ort_skm$Ort)
describeBy(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort)
anova_skmfn_ort_m_training <- aov(df_wma_ort_skm_m$S_KM_FN ~ df_wma_ort_skm_m$Ort)
summary(anova_skmfn_ort_m_training)
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort, p.adjust.method = "bonferroni")
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort)
library(pysch)
library(psych)
library(ggplot2)
# t-Test
t.test(x=subset(df_wma_wetter_2, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_wetter_2, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# var-test
var.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
conf.level = 0.95
)
# var-test
var.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
conf.level = 0.95
)
# var-test
var.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
conf.level = 0.95
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# var-test
var.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
conf.level = 0.95, alternative = "two-sided"
)
# var-test
var.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
conf.level = 0.95, alternative = "two.sided"
)
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN))),
conf.level = 0.95
)
df_wma_ort_skm_m
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN))),
conf.level = 0.95
)
library("cars")
library("car")
describeBy(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort)
levene.test(y=df_wma_ort_skm_m, group=Ort)
leveneTest(y=df_wma_ort_skm_m, group=Ort)
leveneTest(S_KM_FN ~ Ort, df_wma_ort_skm_m)
summary(anova_skmfn_ort_m_training)
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort, p.adjust.method = "bonferroni")
qqnorm(rstandard(anova_skmfn_ort_training))
qqline(rstandard(anova_skmfn_ort_training))
qqnorm(rstandard(anova_skmfn_ort_m_training))
qqline(rstandard(anova_skmfn_ort_m_training))
describeBy(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort)
leveneTest(S_KM_FN ~ Ort, df_wma_ort_skm_m)
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN))),
conf.level = 0.95
)
leveneTest(S_KM_FN ~ Ort, df_wma_ort_skm_m)
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN))),
conf.level = 0.95
)
leveneTest(S_KM_FN ~ Ort, df_wma_ort_skm_m)
library("DescTools")
EtaSq(anova_skmfn_ort_m_training)
sqrt(0.13/(1-0.13))
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN))),
conf.level = 0.95
)
leveneTest(S_KM_FN ~ Ort, df_wma_ort_skm_m)
oneway.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort, p.adjust.method = "bonferroni")
oneway.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort)
oneway.test(S_KM_FN ~ Ort,  data = df_wma_ort_skm_m, var.equal = FALSE)
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort, p.adjust.method = "bonferroni", paired = FALSE)
leveneTest(S_KM_FN ~ Ort, df_wma_ort_skm_m)
oneway.test(S_KM_FN ~ Ort,  data = df_wma_ort_skm_m, var.equal = FALSE)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Chicago'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Chicago'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.975, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Chicago'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.85, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Chicago'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
oneway.test(S_KM_FN ~ Ort,  data = df_wma_ort_skm_m, var.equal = FALSE)
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort, p.adjust.method = "bonferroni", paired = FALSE)
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort, p.adjust.method = "bonferroni", paired = FALSE, pool.sd = FALSE)
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='Tokyo'), select = c(S_KM_FN))),
conf.level = 0.95
)
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN))),
conf.level = 0.95
)
# var-test
var.test(x=unlist(subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN))),
y=unlist(subset(df_wma_ort_skm_m, (Ort=='London'), select = c(S_KM_FN))),
conf.level = 0.95
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
library("cr")
library("cars")
library("car")
library(psych)
library(ggplot2)
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=S_KM_FN, x=Ort)) +
geom_boxplot()
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=S_KM_FN, x=Ort, color=Ort)) +
geom_boxplot() +
labs(y="Laufzeit", x="Ort", title = "Laufzeit (Männer) / Ort")
ggplot(subset(df_wma_wetter_2,(Geschlecht=='M')), aes(y=S_KM_FN, x=Ort, fill=Ort)) +
geom_boxplot() +
labs(y="Laufzeit", x="Ort", title = "Laufzeit (Männer) / Ort")
ggsave(filename = "plt_box_lfz_m_ort", plot = last_plot(),units = "px",scale = 1, limitsize = FALSE, device = "png")
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni",
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater"
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater",
paired = FALSE, pool.sd = FALSE)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
t.test(data=subset(df_wma_ort_skm_m, (Ort %in% c('Berlin','NewYork'))),
S_KM_FN ~ Ort,
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
t.test(data=subset(df_wma_ort_skm_m, (Ort %in% c('Berlin','NewYork'))),
S_KM_FN ~ Ort,
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater",
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "less",
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater",
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "less",
paired = FALSE, pool.sd = FALSE)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater",
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater",
paired = FALSE, pool.sd = FALSE)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "greater",
paired = FALSE, pool.sd = FALSE)
# pairwise-test
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "less",
paired = FALSE, pool.sd = FALSE)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "lesse"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "less"
)
# t-Test
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# t-Test - Berlin ~ London
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Londn'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# t-Test - Berlin ~ London
t.test(x=subset(df_wma_ort_skm_m, (Ort=='Berlin'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='London'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
t.test(x=subset(df_wma_ort_skm_m, (Ort=='NewYork'), select = c(S_KM_FN)),
y=subset(df_wma_ort_skm_m, (Ort=='Chicago'), select = c(S_KM_FN)),
paired = FALSE, conf.level = 0.95, var.equal = FALSE, alternative = "greater"
)
# pairwise-test: two.sided
pairwise.t.test(df_wma_ort_skm_m$S_KM_FN, df_wma_ort_skm_m$Ort,
p.adjust.method = "bonferroni", alternative = "two.sided",
paired = FALSE, pool.sd = FALSE)
install.packages("MESS")
library(psych)
library(MESS)
library(ggplo2)
library(DescTools)
library(ggplot2)
# Stichprobe ermitteln
power_t_test(delta = 0.5, sig.level = 0.05, power = 0.95, ratio = 1, type = "two.sampe"
, alternative = "one.sided", df.method = "welch")
# Stichprobe ermitteln
power_t_test(delta = 0.5, sig.level = 0.05, power = 0.95, ratio = 1, type = "two.sample"
, alternative = "one.sided", df.method = "welch")
